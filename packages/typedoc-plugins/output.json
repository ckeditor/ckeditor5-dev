{
	"schemaVersion": "2.0",
	"id": 0,
	"name": "@ckeditor/typedoc-plugins",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 16,
			"name": "customerror",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 29,
					"name": "default",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error statement occurring before the export keyword."
							}
						],
						"blockTags": [
							{
								"tag": "@error",
								"content": [
									{
										"kind": "text",
										"text": "customerror-before-export"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 33,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "error.ts",
									"line": 13,
									"character": 1,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L13"
								}
							],
							"signatures": [
								{
									"id": 34,
									"name": "default",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "error.ts",
											"line": 13,
											"character": 1,
											"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L13"
										}
									],
									"parameters": [
										{
											"id": 35,
											"name": "errorName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 29,
										"name": "CustomError",
										"package": "@ckeditor/typedoc-plugins",
										"qualifiedName": "default"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 22,
										"name": "default.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 21,
								"name": "default.constructor"
							}
						},
						{
							"id": 36,
							"name": "errorName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isProtected": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "error.ts",
									"line": 11,
									"character": 11,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 24,
								"name": "default.errorName"
							}
						},
						{
							"id": 39,
							"name": "error",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isPublic": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "error.ts",
									"line": 25,
									"character": 12,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L25"
								}
							],
							"getSignature": {
								"id": 40,
								"name": "error",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"sources": [
									{
										"fileName": "error.ts",
										"line": 25,
										"character": 12,
										"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L25"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Error.error"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 27,
								"name": "default.error"
							}
						},
						{
							"id": 37,
							"name": "name",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isPublic": true,
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "error.ts",
									"line": 21,
									"character": 12,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L21"
								}
							],
							"getSignature": {
								"id": 38,
								"name": "name",
								"variant": "signature",
								"kind": 524288,
								"flags": {
									"isInherited": true
								},
								"sources": [
									{
										"fileName": "error.ts",
										"line": 21,
										"character": 12,
										"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L21"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								},
								"inheritedFrom": {
									"type": "reference",
									"target": -1,
									"name": "Error.name"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 25,
								"name": "default.name"
							}
						},
						{
							"id": 30,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true,
								"isStatic": true
							},
							"sources": [
								{
									"fileName": "customerror.ts",
									"line": 41,
									"character": 15,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/customerror.ts#L41"
								}
							],
							"signatures": [
								{
									"id": 31,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "customerror.ts",
											"line": 41,
											"character": 15,
											"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/customerror.ts#L41"
										}
									],
									"parameters": [
										{
											"id": 32,
											"name": "errorName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 29,
										"name": "CustomError",
										"package": "@ckeditor/typedoc-plugins",
										"qualifiedName": "default"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								33
							]
						},
						{
							"title": "Properties",
							"children": [
								36
							]
						},
						{
							"title": "Accessors",
							"children": [
								39,
								37
							]
						},
						{
							"title": "Methods",
							"children": [
								30
							]
						}
					],
					"sources": [
						{
							"fileName": "customerror.ts",
							"line": 40,
							"character": 21,
							"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/customerror.ts#L40"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 20,
							"name": "default",
							"package": "@ckeditor/typedoc-plugins"
						}
					]
				},
				{
					"id": 17,
					"name": "create",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "customerror.ts",
							"line": 61,
							"character": 16,
							"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/customerror.ts#L61"
						}
					],
					"signatures": [
						{
							"id": 18,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "customerror.ts",
									"line": 61,
									"character": 16,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/customerror.ts#L61"
								}
							],
							"parameters": [
								{
									"id": 19,
									"name": "errorName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 29,
								"name": "CustomError",
								"package": "@ckeditor/typedoc-plugins",
								"qualifiedName": "default"
							}
						}
					]
				},
				{
					"id": 41,
					"name": "customerror-before-module",
					"variant": "declaration",
					"kind": 8388608,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error statement occurring before the `@module` definition."
							}
						]
					},
					"isCKEditor5Error": true
				},
				{
					"id": 42,
					"name": "customerror-before-module-with-links",
					"variant": "declaration",
					"kind": 8388608,
					"flags": {},
					"comment": {
						"summary": [
							{
								"text": "An error statement occurring before the `@module` definition. See ",
								"kind": "text"
							},
							{
								"text": "~CustomError",
								"kind": "inline-tag",
								"tag": "@link"
							},
							{
								"text": " or\n",
								"kind": "text"
							},
							{
								"text": "module:fixtures/customerror~CustomError Custom label",
								"kind": "inline-tag",
								"tag": "@link"
							},
							{
								"text": ". A text after.",
								"kind": "text"
							}
						]
					},
					"isCKEditor5Error": true
				},
				{
					"id": 43,
					"name": "customerror-after-module",
					"variant": "declaration",
					"kind": 8388608,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error statement occurring after the \"@module\" definition."
							}
						]
					},
					"isCKEditor5Error": true
				},
				{
					"id": 44,
					"name": "customerror-before-export",
					"variant": "declaration",
					"kind": 8388608,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error statement occurring before the export keyword."
							}
						]
					},
					"isCKEditor5Error": true
				},
				{
					"id": 45,
					"name": "customerror-inside-method-no-text",
					"variant": "declaration",
					"kind": 8388608,
					"flags": {},
					"isCKEditor5Error": true
				},
				{
					"id": 46,
					"name": "customerror-inside-method",
					"variant": "declaration",
					"kind": 8388608,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error statement occurring inside a method.\n\nIt contains a parameter."
							}
						]
					},
					"isCKEditor5Error": true
				},
				{
					"id": 47,
					"name": "customerror-inside-function",
					"variant": "declaration",
					"kind": 8388608,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error statement occurring inside a function.\n\nIt contains parameters."
							}
						]
					},
					"isCKEditor5Error": true
				},
				{
					"id": 48,
					"name": "customerror-after-export",
					"variant": "declaration",
					"kind": 8388608,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An error statement occurring after the export keyword."
							}
						]
					},
					"isCKEditor5Error": true
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						29
					]
				},
				{
					"title": "Functions",
					"children": [
						17
					]
				}
			],
			"sources": [
				{
					"fileName": "customerror.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/customerror.ts#L1"
				}
			]
		},
		{
			"id": 15,
			"name": "fixtures/error",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 20,
					"name": "default",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"children": [
						{
							"id": 21,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "error.ts",
									"line": 13,
									"character": 1,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L13"
								}
							],
							"signatures": [
								{
									"id": 22,
									"name": "default",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "error.ts",
											"line": 13,
											"character": 1,
											"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L13"
										}
									],
									"parameters": [
										{
											"id": 23,
											"name": "errorName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 20,
										"name": "Error",
										"package": "@ckeditor/typedoc-plugins",
										"qualifiedName": "default"
									}
								}
							]
						},
						{
							"id": 24,
							"name": "errorName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "error.ts",
									"line": 11,
									"character": 11,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 27,
							"name": "error",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "error.ts",
									"line": 25,
									"character": 12,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L25"
								}
							],
							"getSignature": {
								"id": 28,
								"name": "error",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"sources": [
									{
										"fileName": "error.ts",
										"line": 25,
										"character": 12,
										"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L25"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 25,
							"name": "name",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "error.ts",
									"line": 21,
									"character": 12,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L21"
								}
							],
							"getSignature": {
								"id": 26,
								"name": "name",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"sources": [
									{
										"fileName": "error.ts",
										"line": 21,
										"character": 12,
										"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L21"
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								21
							]
						},
						{
							"title": "Properties",
							"children": [
								24
							]
						},
						{
							"title": "Accessors",
							"children": [
								27,
								25
							]
						}
					],
					"sources": [
						{
							"fileName": "error.ts",
							"line": 10,
							"character": 21,
							"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L10"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29,
							"name": "default"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						20
					]
				}
			],
			"sources": [
				{
					"fileName": "error.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/error.ts#L1"
				}
			]
		},
		{
			"id": 2,
			"name": "fixtures/events",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 3,
					"name": "ErrorEvent",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fired when error occurs."
							}
						],
						"blockTags": [
							{
								"tag": "@eventName",
								"content": [
									{
										"kind": "text",
										"text": "error"
									}
								]
							},
							{
								"tag": "@param",
								"name": "error",
								"content": [
									{
										"kind": "text",
										"text": "Error message."
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 6,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 22,
									"character": 1,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L22"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "namedTupleMember",
										"name": "error",
										"isOptional": false,
										"element": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 5,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 21,
									"character": 1,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L21"
								}
							],
							"type": {
								"type": "literal",
								"value": "error"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6,
								5
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 20,
							"character": 12,
							"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L20"
						}
					]
				},
				{
					"id": 11,
					"name": "ErrorSuffixEvent",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fired when error occurs."
							}
						],
						"blockTags": [
							{
								"tag": "@eventName",
								"content": [
									{
										"kind": "text",
										"text": "error-suffix"
									}
								]
							},
							{
								"tag": "@param",
								"name": "error",
								"content": [
									{
										"kind": "text",
										"text": "Error message."
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 14,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 44,
									"character": 1,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L44"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "namedTupleMember",
										"name": "error",
										"isOptional": false,
										"element": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 13,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 43,
									"character": 1,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L43"
								}
							],
							"type": {
								"type": "literal",
								"value": "error"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14,
								13
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 42,
							"character": 12,
							"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L42"
						}
					]
				},
				{
					"id": 7,
					"name": "PrefixErrorEvent",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fired when error occurs."
							}
						],
						"blockTags": [
							{
								"tag": "@eventName",
								"content": [
									{
										"kind": "text",
										"text": "prefix-error"
									}
								]
							},
							{
								"tag": "@param",
								"name": "error",
								"content": [
									{
										"kind": "text",
										"text": "Error message."
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 10,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 33,
									"character": 1,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L33"
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "namedTupleMember",
										"name": "error",
										"isOptional": false,
										"element": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 9,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 32,
									"character": 1,
									"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L32"
								}
							],
							"type": {
								"type": "literal",
								"value": "error"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								10,
								9
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 31,
							"character": 12,
							"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L31"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						3,
						11,
						7
					]
				}
			],
			"sources": [
				{
					"fileName": "events.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/ckeditor/ckeditor5-dev/blob/2685978c7af5156e323b6258fadf4406b62a4647/packages/typedoc-plugins/tests/tag-error/fixtures/events.ts#L1"
				}
			]
		},
		{
			"id": 1,
			"name": "not-valid-module",
			"variant": "declaration",
			"kind": 2,
			"flags": {}
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				16,
				15,
				2,
				1
			]
		}
	],
	"packageName": "@ckeditor/typedoc-plugins",
	"readme": [
		{
			"kind": "text",
			"text": "# TypeDoc plugins overview\n\n[![npm version](https://badge.fury.io/js/%40ckeditor%2Ftypedoc-plugins.svg)](https://www.npmjs.com/package/@ckeditor/typedoc-plugins)\n[![CircleCI](https://circleci.com/gh/ckeditor/ckeditor5-dev.svg?style=shield)](https://app.circleci.com/pipelines/github/ckeditor/ckeditor5-dev?branch=master)\n\n## Overview\n\nThis repository consists of few plugins which extend the capabilities of [TypeDoc](https://typedoc.org/).\n\nBefore enabling plugins from the package, you need to install it first.\n\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm install @ckeditor/typedoc-plugins\n```"
		},
		{
			"kind": "text",
			"text": "\n\nBelow you can find the detailed overview of available plugins.\n\n### Module fixer\n\nThe plugin reads the module name specified in the "
		},
		{
			"kind": "code",
			"text": "`@module`"
		},
		{
			"kind": "text",
			"text": " annotation.\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\nimport type { TypeDefinition } from '...';\n\n/**\n * @module package/file\n */\n```"
		},
		{
			"kind": "text",
			"text": "\n\nFor the example specified above, a name of the parsed module should be equal to "
		},
		{
			"kind": "code",
			"text": "`package/file`"
		},
		{
			"kind": "text",
			"text": ".\n\nThe "
		},
		{
			"kind": "code",
			"text": "`import`"
		},
		{
			"kind": "text",
			"text": " statements may be specified above the \"@module\" block code. In such a case, the default module parser from "
		},
		{
			"kind": "code",
			"text": "`typedoc`"
		},
		{
			"kind": "text",
			"text": " returns the module name based on a path relative to the project root.\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/module-fixer' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Symbol fixer\n\nThe plugin renames "
		},
		{
			"kind": "code",
			"text": "`Symbol.*`"
		},
		{
			"kind": "text",
			"text": " definitions with the JSDoc style.\n\n* Typedoc: "
		},
		{
			"kind": "code",
			"text": "`[iterator]() → Iterator`"
		},
		{
			"kind": "text",
			"text": "\n* JSDoc: "
		},
		{
			"kind": "code",
			"text": "`Symbol.iterator() → Iterator`"
		},
		{
			"kind": "text",
			"text": "\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/symbol-fixer' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Interface augmentation fixer\n\nThe plugin tries to fix an interface, that has been extended (augmented) from the outside (from\nanother module) in the re-exported "
		},
		{
			"kind": "code",
			"text": "`index.ts`"
		},
		{
			"kind": "text",
			"text": " file. When the extending \"declare module ...\" declaration contains the full package name, it points to the "
		},
		{
			"kind": "code",
			"text": "`index.ts`"
		},
		{
			"kind": "text",
			"text": " file instead of the actual source file. The goal is to add missing properties from interfaces to their source locations.\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/interface-augmentation-fixer' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Event parameter fixer\n\nThe plugin injects the "
		},
		{
			"kind": "code",
			"text": "`eventInfo`"
		},
		{
			"kind": "text",
			"text": " parameter (an instance of the "
		},
		{
			"kind": "code",
			"text": "`EventInfo`"
		},
		{
			"kind": "text",
			"text": " class) as the first parameter for each event reflection.\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/event-param-fixer' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Events inheritance fixer\n\nThe plugin takes care of inheriting events, which are created manually via the ["
		},
		{
			"kind": "code",
			"text": "`@eventName`"
		},
		{
			"kind": "text",
			"text": "](#tag-eventname) annotation.\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/event-inheritance-fixer' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Purge private API\n\nThe plugin removes reflections collected from private packages (marked as "
		},
		{
			"kind": "code",
			"text": "`\"private\": true`"
		},
		{
			"kind": "text",
			"text": " in their "
		},
		{
			"kind": "code",
			"text": "`package.json`"
		},
		{
			"kind": "text",
			"text": "). To disable the mechanism, add the "
		},
		{
			"kind": "code",
			"text": "`@publicApi`"
		},
		{
			"kind": "text",
			"text": " annotation at the beginning of a file.\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/purge-private-api-docs' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Tag "
		},
		{
			"kind": "code",
			"text": "`@error`"
		},
		{
			"kind": "text",
			"text": "\n\nThe plugin collects error definitions from the "
		},
		{
			"kind": "code",
			"text": "`@error`"
		},
		{
			"kind": "text",
			"text": " annotation.\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/tag-error' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Tag "
		},
		{
			"kind": "code",
			"text": "`@eventName`"
		},
		{
			"kind": "text",
			"text": "\n\nThe plugin collects event definitions from the "
		},
		{
			"kind": "code",
			"text": "`@eventName`"
		},
		{
			"kind": "text",
			"text": " annotation and assigns them as the children of the class or the "
		},
		{
			"kind": "code",
			"text": "`Observable`"
		},
		{
			"kind": "text",
			"text": " interface.\n\nWe are not using the ["
		},
		{
			"kind": "code",
			"text": "`@event`"
		},
		{
			"kind": "text",
			"text": "](https://typedoc.org/tags/event/) annotation, known from the JSDoc specification, because it has a special meaning in the TypeDoc, and it would be difficult to get it to work as we expect.\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/tag-event' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n### Tag "
		},
		{
			"kind": "code",
			"text": "`@observable`"
		},
		{
			"kind": "text",
			"text": "\n\nTo enable the plugin, add the following path to available plugins:\n\n"
		},
		{
			"kind": "code",
			"text": "```js\n{\n    plugin: [\n        // ...\n        require.resolve( '@ckeditor/typedoc-plugins/lib/tag-observable' )\n    ]\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n------------------------------------------------------------------------------------\n\n## Changelog\n\nSee the ["
		},
		{
			"kind": "code",
			"text": "`CHANGELOG.md`"
		},
		{
			"kind": "text",
			"text": "](https://github.com/ckeditor/ckeditor5-dev/blob/master/packages/typedoc-plugins/CHANGELOG.md) file."
		}
	],
	"symbolIdMap": {
		"2": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": ""
		},
		"3": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "ErrorEvent"
		},
		"5": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "__type.name"
		},
		"6": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "__type.args"
		},
		"7": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "PrefixErrorEvent"
		},
		"9": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "__type.name"
		},
		"10": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "__type.args"
		},
		"11": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "ErrorSuffixEvent"
		},
		"13": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "__type.name"
		},
		"14": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/events.ts",
			"qualifiedName": "__type.args"
		},
		"15": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": ""
		},
		"16": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/customerror.ts",
			"qualifiedName": ""
		},
		"17": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/customerror.ts",
			"qualifiedName": "create"
		},
		"18": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/customerror.ts",
			"qualifiedName": "create"
		},
		"19": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/customerror.ts",
			"qualifiedName": "errorName"
		},
		"20": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default"
		},
		"21": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.__constructor"
		},
		"22": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default"
		},
		"23": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "errorName"
		},
		"24": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.errorName"
		},
		"25": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.name"
		},
		"26": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.name"
		},
		"27": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.error"
		},
		"28": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.error"
		},
		"29": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/customerror.ts",
			"qualifiedName": "default"
		},
		"30": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/customerror.ts",
			"qualifiedName": "default.create"
		},
		"31": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/customerror.ts",
			"qualifiedName": "default.create"
		},
		"32": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/customerror.ts",
			"qualifiedName": "errorName"
		},
		"33": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.__constructor"
		},
		"34": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default"
		},
		"35": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "errorName"
		},
		"36": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.errorName"
		},
		"37": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.name"
		},
		"38": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.name"
		},
		"39": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.error"
		},
		"40": {
			"packageName": "@ckeditor/typedoc-plugins",
			"packagePath": "tests/tag-error/fixtures/error.ts",
			"qualifiedName": "default.error"
		}
	},
	"files": {
		"entries": {
			"1": "tests/tag-error/fixtures/events.ts",
			"2": "tests/tag-error/fixtures/error.ts",
			"3": "tests/tag-error/fixtures/customerror.ts"
		},
		"reflections": {
			"1": 2,
			"2": 15,
			"3": 16
		}
	}
}
