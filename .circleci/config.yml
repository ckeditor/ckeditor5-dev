# This is the based configuration required by CircleCI to run a build.
#
# The repository uses the dynamic configuration to generate
# tasks for executing tests and checking the code coverage.
#
# This configuration aims to prepare a complete design and continue checking
# the repository in a new workflow.
#
# To modify the commands to execute on CI, review the following files:
# - scripts/ci/generate-circleci-configuration.js - the script that creates the `config-tests.yml` file used on the new workflow.
# - .circleci/template.yml - the template filled with data to execute.
#
# Useful resources:
# - https://circleci.com/docs/using-dynamic-configuration/
version: 2.1

setup: true

parameters:
  triggerCommitHash:
    type: string
    default: ""
  isNightly:
    type: boolean
    default: false
  isRelease:
    type: boolean
    default: false

orbs:
  continuation: circleci/continuation@0.1.2

commands:
  install_ssh_keys_command:
    description: "Install SSH keys"
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a0:41:a2:56:c8:7d:3f:29:41:d1:87:92:fd:50:2b:6b"

jobs:
  generate_configuration:
    docker:
      - image: cimg/node:22.12.0
    steps:
      - checkout
      - install_ssh_keys_command
      - restore_cache:
          name: Restore pnpm cache
          keys:
            - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            sudo npm install --global corepack@latest
            corepack enable --install-directory="/home/circleci/bin"
            corepack prepare pnpm@latest-10 --activate
            pnpm config set store-dir .pnpm-store
      - run:
          name: Install dependencies
          command: pnpm install
      - save_cache:
          name: Save pnpm cache
          key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - .pnpm-store
      - run:
          name: Generate a new configuration to check all packages in the repository
          command: node scripts/ci/generate-circleci-configuration.js
      - continuation/continue:
          configuration_path: .circleci/config-tests.yml

workflows:
  version: 2
  config:
    jobs:
      - generate_configuration
